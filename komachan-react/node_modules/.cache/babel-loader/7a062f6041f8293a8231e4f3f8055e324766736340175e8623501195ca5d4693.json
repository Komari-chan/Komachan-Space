{"ast":null,"code":"var _jsxFileName = \"D:\\\\komachan\\\\komachan-react\\\\src\\\\components\\\\GenerateImageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateImageForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateImageForm() {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/generate-image', JSON.parse(input), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([response.data]));\n      setImage(url);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };\n  const handleTest = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/test');\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('Error testing Flask:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generate-image-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: handleChange,\n        rows: \"10\",\n        cols: \"50\",\n        placeholder: \"Enter JSON body here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Generated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTest,\n      children: \"Test Flask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateImageForm, \"hO62gw9FnmFCVPpN0+ldWUxLpr0=\");\n_c = GenerateImageForm;\nexport default GenerateImageForm;\nvar _c;\n$RefreshReg$(_c, \"GenerateImageForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateImageForm","_s","input","setInput","image","setImage","message","setMessage","handleChange","e","target","value","handleSubmit","preventDefault","response","post","JSON","parse","headers","responseType","url","URL","createObjectURL","Blob","data","error","console","handleTest","get","className","children","onSubmit","onChange","rows","cols","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/komachan/komachan-react/src/components/GenerateImageForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './GenerateImageForm.css';\r\n\r\nfunction GenerateImageForm() {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/generate-image', JSON.parse(input), {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        responseType: 'blob'\r\n      });\r\n      const url = URL.createObjectURL(new Blob([response.data]));\r\n      setImage(url);\r\n    } catch (error) {\r\n      console.error('Error generating image:', error);\r\n    }\r\n  };\r\n\r\n  const handleTest = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/test');\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error testing Flask:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"generate-image-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea value={input} onChange={handleChange} rows=\"10\" cols=\"50\" placeholder=\"Enter JSON body here\"></textarea>\r\n        <button type=\"submit\">Generate Image</button>\r\n      </form>\r\n      {image && <img src={image} alt=\"Generated\" />}\r\n      <button onClick={handleTest}>Test Flask</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateImageForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}